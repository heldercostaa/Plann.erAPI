name: CI

on:
  push:
    branches:
      - main

jobs:
  test:
    if: "${{ !contains(github.event.head_commit.message, 'ci: update tag in helm values') }}"
    name: "Test and Coverage"
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5433:5432
    env:
      # Api
      NODE_ENV: "test"
      PORT: "3333"
      API_BASE_URL: "http://localhost:3333"
      LOG_LEVEL: "silent"
      # Web
      WEB_BASE_URL: "http://localhost:3000"
      # Database
      DB_URL: "postgresql://postgres:postgres@localhost:5433/planner"
      DB_LOG_LEVEL: "error"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20.15.x"

      - name: Install dependencies
        run: npm ci

      - name: Run test migrations
        run: npx prisma migrate deploy

      - name: Run tests
        run: npm run test:coverage

      - name: Upload coverage
        uses: codecov/codecov-action@v4
        with:
          file: coverage/junit.xml
          token: ${{ secrets.CODECOV_TOKEN }}

  build-and-deploy:
    if: "${{ !contains(github.event.head_commit.message, 'ci: update tag in helm values') }}"
    name: "Build and Deploy"
    runs-on: ubuntu-latest
    needs: test
    env:
      DB_URL: ${{ secrets.DB_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Maybe add step to run migrations?
      - name: Run production migrations
        run: npx prisma migrate deploy

      - name: Generate SHA
        id: generate_sha
        run: |
          SHA=$(echo $GITHUB_SHA | head -c7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Log into the container registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            heldercostaa/planner-api:${{ steps.generate_sha.outputs.sha }},
            heldercostaa/planner-api:latest

      - name: Update helm tag
        uses: fjogeleit/yaml-update-action@main
        with:
          branch: release
          targetBranch: main
          createPR: true
          valueFile: "infra/helm/values.yaml"
          propertyPath: "image.tag"
          value: ${{ steps.generate_sha.outputs.sha }}
          commitChange: true
          message: "[skip ci] ci: update tag in helm values"
