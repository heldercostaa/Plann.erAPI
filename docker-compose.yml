name: planner

services:
  api:
    container_name: api
    build:
      context: .
      target: dev
    ports:
      - 3333:3333
    env_file:
      - "./.env"
    volumes:
      - .:/app/
      - nodemodules:/app/node_modules
    depends_on:
      - migration
    networks:
      - planner

  postgres:
    container_name: postgres
    image: postgres:16.3-alpine
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: "planner"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - planner
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d planner"]
      interval: 10s
      timeout: 5s

  postgres-tests:
    container_name: postgres-test
    image: postgres:16.3-alpine
    restart: always
    ports:
      - 5433:5432
    environment:
      POSTGRES_DB: "planner"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    networks:
      - planner

  migration:
    build:
      context: .
      target: dev
    command: npx prisma migrate deploy
    environment:
      DB_URL: "postgresql://postgres:postgres@postgres:5432/planner"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - planner

volumes:
  pg_data: {}
  nodemodules: {}

networks:
  planner:
    driver: bridge
